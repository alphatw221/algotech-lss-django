# Generated by Django 3.2.8 on 2022-12-01 06:57

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import djongo.models.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Campaign',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('start_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('ordering_start_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('ordering_only_activated_products', models.BooleanField(default=False, null=True)),
                ('currency', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_sign', models.CharField(blank=True, default='$', max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('new', 'New'), ('deleted', 'Deleted')], default='new', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facebook_campaign', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('instagram_campaign', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('youtube_campaign', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('twitch_campaign', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('tiktok_campaign', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_payment', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_logistic', djongo.models.fields.JSONField(blank=dict, default=dict, null=True)),
                ('meta_reply', djongo.models.fields.JSONField(default=dict)),
                ('meta_point', djongo.models.fields.JSONField(default=dict)),
                ('lang', models.CharField(choices=[('en', 'English'), ('id', 'Indonesian'), ('zh_hans', 'Chinese-Simplify'), ('zh_hant', 'Chinese-Tranditional'), ('vi', 'Vietnamese')], default='en', max_length=255)),
                ('price_unit', models.CharField(blank=True, choices=[('1', '1'), ('10', '10'), ('100', '100'), ('1000', '1000'), ('10000', '10000'), ('100000', '100000'), ('1000000', '1000000')], default='1', max_length=255)),
                ('decimal_places', models.IntegerField(choices=[(-3, '1000'), (-2, '100'), (-1, '10'), (0, '1'), (1, '0.1'), (2, '0.01')], default=2)),
                ('stop_checkout', models.BooleanField(default=False)),
                ('priority', models.IntegerField(default=1)),
                ('silent_count', models.IntegerField(default=0)),
            ],
            options={
                'db_table': 'api_campaign',
            },
        ),
        migrations.CreateModel(
            name='CampaignProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty_for_sale', models.IntegerField(default=0, null=True)),
                ('qty_sold', models.IntegerField(default=0, null=True)),
                ('qty_pending_payment', models.IntegerField(default=0)),
                ('qty_add_to_cart', models.IntegerField(default=0)),
                ('oversell', models.BooleanField(default=False)),
                ('overbook', models.BooleanField(default=True)),
                ('active', models.BooleanField(default=True)),
                ('allow_add_on', models.BooleanField(default=True)),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('excerpt', models.TextField(blank=True, default=None, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('content', models.TextField(blank=True, default=None, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('price', models.FloatField(blank=True, default=0, null=True)),
                ('price_ori', models.FloatField(blank=True, default=0, null=True)),
                ('tax', models.FloatField(blank=True, default=0, null=True)),
                ('currency', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('currency_sign', models.CharField(blank=True, default='$', max_length=255, null=True)),
                ('points', models.IntegerField(blank=True, default=0, null=True)),
                ('model', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('sku', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('upc', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('image', models.CharField(blank=True, default='https://storage.googleapis.com/lss_public_bucket/static/no_image.jpeg', max_length=256, null=True)),
                ('sort_order', models.IntegerField(blank=True, default=0, null=True)),
                ('order_code', models.CharField(blank=True, max_length=255, null=True)),
                ('max_order_amount', models.IntegerField(default=None, null=True)),
                ('customer_removable', models.BooleanField(default=False, null=True)),
                ('customer_editable', models.BooleanField(default=False, null=True)),
                ('type', models.CharField(blank=True, choices=[('n/a', 'Not available'), ('product', 'Product from inventory'), ('product-fast', 'Product from fast-add'), ('lucky_draw', 'Lucky Draw from inventory'), ('lucky_draw-fast', 'Lucky Draw from fast-add')], default='product', max_length=255)),
                ('status', models.BooleanField(default=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_logistic', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('tag', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('categories', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='api.campaign')),
            ],
            options={
                'db_table': 'api_campaign_product',
            },
        ),
        migrations.CreateModel(
            name='Deal',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('original_plan', models.CharField(choices=[('trial', 'Trial'), ('lite', 'Lite'), ('standard', 'Standard'), ('pro', 'Pro'), ('premium', 'Premium'), ('dealer', 'Dealer')], max_length=255)),
                ('purchased_plan', models.CharField(choices=[('trial', 'Trial'), ('lite', 'Lite'), ('standard', 'Standard'), ('pro', 'Pro'), ('premium', 'Premium'), ('dealer', 'Dealer')], max_length=255)),
                ('total', models.FloatField(blank=True, default=0, null=True)),
                ('status', models.CharField(blank=True, choices=[('success', 'Success'), ('fail', 'Fail'), ('processing', 'Processing')], max_length=255, null=True)),
                ('payment_time', models.DateTimeField()),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'db_table': 'api_deal',
            },
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('api_key', models.CharField(blank=True, max_length=255, null=True)),
                ('secret_key', models.CharField(blank=True, max_length=255, null=True)),
                ('salt', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('authorization', djongo.models.fields.JSONField(default=dict)),
                ('permissions', djongo.models.fields.JSONField(default=dict)),
                ('meta', djongo.models.fields.JSONField(default=dict)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
            options={
                'db_table': 'api_developer',
            },
        ),
        migrations.CreateModel(
            name='FacebookPage',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('page_id', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('image', models.CharField(blank=True, max_length=512, null=True)),
                ('lang', models.CharField(blank=True, choices=[('en', 'English'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese'), ('id', 'Indonesian'), ('vi', 'Vietnam')], default='en', max_length=255)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_sign', models.CharField(blank=True, default='$', max_length=255, null=True)),
                ('timezone', models.CharField(blank=True, default='Asia/Singapore', max_length=255, null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('token_update_by', models.CharField(blank=True, max_length=255, null=True)),
                ('token_update_at', models.DateTimeField(null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_payment', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_logistic', djongo.models.fields.JSONField(blank=dict, default=dict, null=True)),
            ],
            options={
                'db_table': 'api_facebook_page',
            },
        ),
        migrations.CreateModel(
            name='InstagramProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile_id', models.CharField(blank=True, max_length=255, null=True)),
                ('business_id', models.CharField(blank=True, max_length=255, null=True)),
                ('connected_facebook_page_id', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('username', models.CharField(blank=True, max_length=255, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('image', models.CharField(blank=True, max_length=512, null=True)),
                ('lang', models.CharField(blank=True, choices=[('en', 'English'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese'), ('id', 'Indonesian'), ('vi', 'Vietnam')], default='en', max_length=255)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_sign', models.CharField(blank=True, default='$', max_length=255, null=True)),
                ('timezone', models.CharField(blank=True, default='Asia/Singapore', max_length=255, null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('token_update_by', models.CharField(blank=True, max_length=255, null=True)),
                ('token_update_at', models.DateTimeField(null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_payment', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_logistic', djongo.models.fields.JSONField(blank=dict, default=dict, null=True)),
            ],
            options={
                'db_table': 'api_instagram_profile',
            },
        ),
        migrations.CreateModel(
            name='Order',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_img', models.CharField(blank=True, max_length=255, null=True)),
                ('platform', models.CharField(blank=True, default=None, max_length=255)),
                ('platform_id', models.IntegerField(blank=True, default=None, null=True)),
                ('products', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('subtotal', models.FloatField(blank=True, default=0, null=True)),
                ('discount', models.FloatField(blank=True, default=0, null=True)),
                ('applied_discount', djongo.models.fields.JSONField(default={})),
                ('free_delivery', models.BooleanField(default=False, null=True)),
                ('adjust_title', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('adjust_price', models.FloatField(blank=True, default=0, null=True)),
                ('tax', models.FloatField(default=0)),
                ('total', models.FloatField(blank=True, default=0, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('status', models.CharField(blank=True, default='proceed', max_length=255, null=True)),
                ('price_unit', models.CharField(blank=True, default='1', max_length=255)),
                ('decimal_places', models.IntegerField(default=2)),
                ('currency', models.CharField(blank=True, default='USD', max_length=255, null=True)),
                ('payment_status', models.CharField(blank=True, default='awaiting_payment', max_length=255, null=True)),
                ('payment_method', models.CharField(blank=True, default='', max_length=32)),
                ('payment_remark', models.TextField(blank=True, default='')),
                ('paid_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('delivery_status', models.CharField(blank=True, default='awaiting_fulfillment', max_length=255, null=True)),
                ('shipping_cost', models.FloatField(blank=True, default=0, null=True)),
                ('shipping_first_name', models.CharField(blank=True, default='', max_length=64)),
                ('shipping_last_name', models.CharField(blank=True, default='', max_length=64)),
                ('shipping_email', models.CharField(blank=True, default='', max_length=128)),
                ('shipping_phone', models.CharField(blank=True, default='', max_length=64)),
                ('shipping_postcode', models.CharField(blank=True, default='', max_length=10)),
                ('shipping_region', models.CharField(blank=True, default='', max_length=32)),
                ('shipping_location', models.CharField(blank=True, default='', max_length=32)),
                ('shipping_address_1', models.CharField(blank=True, default='', max_length=128)),
                ('pickup_address', models.CharField(blank=True, default='', max_length=128)),
                ('shipping_method', models.CharField(blank=True, default='', max_length=32)),
                ('shipping_remark', models.TextField(blank=True, default='')),
                ('shipping_date', models.DateField(blank=True, default=None, null=True)),
                ('shipping_date_time', models.DateTimeField(blank=True, default=None, null=True)),
                ('shipping_option', models.CharField(blank=True, default='', max_length=32)),
                ('shipping_option_index', models.IntegerField(blank=True, default=None, null=True)),
                ('shipping_option_data', djongo.models.fields.JSONField(default=dict)),
                ('checkout_details', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('history', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_point', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('points_earned', models.IntegerField(blank=True, default=0, null=True)),
                ('points_used', models.IntegerField(blank=True, default=0, null=True)),
                ('point_discount', models.FloatField(blank=True, default=0, null=True)),
                ('point_expired_at', models.DateTimeField(default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
            ],
        ),
        migrations.CreateModel(
            name='TikTokAccount',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('advertiser_id', models.CharField(blank=True, max_length=255, null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('image', models.CharField(blank=True, max_length=512, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('token_update_by', models.CharField(blank=True, max_length=255, null=True)),
                ('token_update_at', models.DateTimeField(null=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'db_table': 'api_tiktok_account',
            },
        ),
        migrations.CreateModel(
            name='TwitchChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('user_name', models.CharField(blank=True, max_length=255, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('image', models.CharField(blank=True, max_length=512, null=True)),
                ('lang', models.CharField(blank=True, choices=[('en', 'English'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese'), ('id', 'Indonesian'), ('vi', 'Vietnam')], default='en', max_length=255)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_sign', models.CharField(blank=True, default='$', max_length=255, null=True)),
                ('timezone', models.CharField(blank=True, default='Asia/Singapore', max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('token_update_by', models.CharField(blank=True, max_length=255, null=True)),
                ('token_update_at', models.DateTimeField(null=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('payment_meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'db_table': 'api_twitch_channel',
            },
        ),
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.CharField(blank=True, max_length=512, null=True)),
                ('ip', models.CharField(blank=True, max_length=255, null=True)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('timezone', models.CharField(blank=True, default='Asia/Singapore', max_length=255, null=True)),
                ('type', models.CharField(blank=True, choices=[('user', 'User'), ('customer', 'Customer')], default='customer', max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('new', 'New'), ('valid', 'Valid')], default='new', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('facebook_info', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('instagram_info', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('youtube_info', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('google_info', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('payment_meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('lang', models.CharField(choices=[('en', 'English'), ('id', 'Indonesian'), ('zh_hans', 'Chinese-Simplify'), ('zh_hant', 'Chinese-Tranditional'), ('vi', 'Vietnamese')], default='en', max_length=255)),
                ('identity', models.CharField(blank=True, choices=[('agent', 'Agent'), ('manager', 'Manager'), ('admin', 'Admin'), ('user', 'User')], default='user', max_length=255, null=True)),
                ('auth_user', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='api_users', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'db_table': 'api_user',
            },
        ),
        migrations.CreateModel(
            name='UserGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('image', models.CharField(blank=True, max_length=512, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'db_table': 'api_user_group',
            },
        ),
        migrations.CreateModel(
            name='UserPlan',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('image', models.CharField(blank=True, max_length=512, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'db_table': 'api_user_plan',
            },
        ),
        migrations.CreateModel(
            name='UserRegister',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, choices=[('trial', 'Trial'), ('lite', 'Lite'), ('standard', 'Standard'), ('pro', 'Pro'), ('premium', 'Premium'), ('dealer', 'Dealer')], default='trial', max_length=255, null=True)),
                ('status', models.CharField(blank=True, default='proceed', max_length=255, null=True)),
                ('period', models.CharField(blank=True, default='month', max_length=255, null=True)),
                ('timezone', models.CharField(blank=True, default='Asia/Singapore', max_length=255, null=True)),
                ('phone', models.CharField(blank=True, max_length=255, null=True)),
                ('email', models.CharField(blank=True, max_length=255, null=True)),
                ('password', models.CharField(blank=True, max_length=255, null=True)),
                ('target_country', models.CharField(blank=True, max_length=255, null=True)),
                ('country', models.CharField(blank=True, default='SG', max_length=255, null=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('payment_amount', models.FloatField(blank=True, default=0, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
            ],
            options={
                'db_table': 'api_user_register',
            },
        ),
        migrations.CreateModel(
            name='YoutubeChannel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('channel_id', models.CharField(blank=True, max_length=255, null=True)),
                ('token', models.CharField(blank=True, max_length=255, null=True)),
                ('refresh_token', models.CharField(blank=True, max_length=255, null=True)),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('image', models.CharField(blank=True, max_length=512, null=True)),
                ('lang', models.CharField(blank=True, choices=[('en', 'English'), ('zh-hans', 'Simplified Chinese'), ('zh-hant', 'Traditional Chinese'), ('id', 'Indonesian'), ('vi', 'Vietnam')], default='en', max_length=255)),
                ('region', models.CharField(blank=True, max_length=255, null=True)),
                ('currency', models.CharField(blank=True, max_length=255, null=True)),
                ('currency_sign', models.CharField(blank=True, default='$', max_length=255, null=True)),
                ('timezone', models.CharField(blank=True, default='Asia/Singapore', max_length=255, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('token_update_by', models.CharField(blank=True, max_length=255, null=True)),
                ('token_update_at', models.DateTimeField(null=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('payment_meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
            ],
            options={
                'db_table': 'api_youtube_channel',
            },
        ),
        migrations.CreateModel(
            name='UserSubscription',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('type', models.CharField(blank=True, choices=[('trial', 'Trial'), ('lite', 'Lite'), ('standard', 'Standard'), ('pro', 'Pro'), ('premium', 'Premium'), ('dealer', 'Dealer')], default='trial', max_length=255, null=True)),
                ('status', models.CharField(default='test', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_payment', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_logistic', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_country', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_reply', djongo.models.fields.JSONField(default=dict)),
                ('meta_point', djongo.models.fields.JSONField(default=dict)),
                ('meta_cart_remind', djongo.models.fields.JSONField(default=dict)),
                ('meta_store', djongo.models.fields.JSONField(default=dict)),
                ('buyer_lang', models.CharField(blank=True, choices=[('en', 'English'), ('id', 'Indonesian'), ('zh_hans', 'Chinese-Simplify'), ('zh_hant', 'Chinese-Tranditional'), ('vi', 'Vietnamese')], default='en', max_length=255)),
                ('lang', models.CharField(blank=True, choices=[('en', 'English'), ('id', 'Indonesian'), ('zh_hans', 'Chinese-Simplify'), ('zh_hant', 'Chinese-Tranditional'), ('vi', 'Vietnamese')], default='en', max_length=255)),
                ('country', models.CharField(blank=True, default='SG', max_length=255, null=True)),
                ('decimal_places', models.IntegerField(choices=[(-3, '1000'), (-2, '100'), (-1, '10'), (0, '1'), (1, '0.1'), (2, '0.01')], default=2)),
                ('currency', models.CharField(blank=True, choices=[('USD', 'USD'), ('TWD', 'TWD'), ('SGD', 'SGD'), ('IDR', 'IDR'), ('PHP', 'PHP'), ('MYR', 'MYR'), ('VND', 'VND'), ('RMB', 'RMB'), ('KHR', 'KHR'), ('AUD', 'AUD'), ('HKD', 'HKD')], default='SGD', max_length=255, null=True)),
                ('price_unit', models.CharField(blank=True, choices=[('1', '1'), ('10', '10'), ('100', '100'), ('1000', '1000'), ('10000', '10000'), ('100000', '100000'), ('1000000', '1000000')], default='1', max_length=255)),
                ('user_plan', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('purchase_price', models.FloatField(blank=True, default=0, null=True)),
                ('started_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('expired_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('campaign_limit', models.IntegerField(default=5)),
                ('campaign_live_limit', models.IntegerField(default=2)),
                ('channel_limit', models.IntegerField(default=1)),
                ('product_limit', models.IntegerField(default=10)),
                ('order_limit', models.IntegerField(default=100)),
                ('license', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('customers', models.ManyToManyField(related_name='stores', to='api.User')),
                ('dealer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscribers', to='api.usersubscription')),
                ('facebook_pages', models.ManyToManyField(related_name='user_subscriptions', to='api.FacebookPage')),
                ('instagram_profiles', models.ManyToManyField(related_name='user_subscriptions', to='api.InstagramProfile')),
                ('tiktok_accounts', models.ManyToManyField(related_name='user_subscriptions', to='api.TikTokAccount')),
                ('twitch_channels', models.ManyToManyField(related_name='user_subscriptions', to='api.TwitchChannel')),
                ('youtube_channels', models.ManyToManyField(related_name='user_subscriptions', to='api.YoutubeChannel')),
            ],
            options={
                'db_table': 'api_user_subscription',
            },
        ),
        migrations.AddField(
            model_name='user',
            name='user_plan',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='api.userplan'),
        ),
        migrations.AddField(
            model_name='user',
            name='user_subscription',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='users', to='api.usersubscription'),
        ),
        migrations.CreateModel(
            name='StaticAssets',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('path', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('type', models.CharField(blank=True, default='animation', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assets', to='api.usersubscription')),
            ],
            options={
                'db_table': 'api_static_assets',
            },
        ),
        migrations.CreateModel(
            name='PromotionCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('code', models.TextField(blank=True, null=True)),
                ('used_at', models.DateTimeField()),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('api_user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='promotion_code', to='api.user')),
                ('deal', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='promotion_code', to='api.deal')),
                ('user_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='promotion_code', to='api.usersubscription')),
            ],
            options={
                'db_table': 'api_promotion_code',
            },
        ),
        migrations.CreateModel(
            name='Product',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('qty', models.IntegerField(default=0, null=True)),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('category', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('excerpt', models.TextField(blank=True, default=None, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('content', models.TextField(blank=True, default=None, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('price', models.FloatField(blank=True, default=0, null=True)),
                ('price_ori', models.FloatField(blank=True, default=0, null=True)),
                ('tax', models.FloatField(blank=True, default=0, null=True)),
                ('currency', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('currency_sign', models.CharField(blank=True, default='$', max_length=255, null=True)),
                ('points', models.IntegerField(blank=True, default=0, null=True)),
                ('model', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('sku', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('upc', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('image', models.CharField(blank=True, default='https://storage.googleapis.com/lss_public_bucket/static/no_image.jpeg', max_length=255, null=True)),
                ('sort_order', models.IntegerField(blank=True, default=0, null=True)),
                ('order_code', models.CharField(blank=True, max_length=255, null=True)),
                ('max_order_amount', models.IntegerField(default=None, null=True)),
                ('customer_removable', models.BooleanField(default=False, null=True)),
                ('customer_editable', models.BooleanField(default=False, null=True)),
                ('type', models.CharField(blank=True, default='product', max_length=255, null=True)),
                ('status', models.CharField(blank=True, choices=[('enabled', 'Enabled'), ('disabled', 'Disabled'), ('archived', 'Archived')], default='enabled', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta_logistic', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('tag', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('categories', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('created_by', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='api.user')),
                ('user_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='products', to='api.usersubscription')),
            ],
        ),
        migrations.CreateModel(
            name='PointTransaction',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('earned', models.IntegerField(blank=True, default=0, null=True)),
                ('used', models.IntegerField(blank=True, default=0, null=True)),
                ('expired_at', models.DateTimeField(default=None, null=True)),
                ('used_calculated', models.BooleanField(default=False)),
                ('expired_calculated', models.BooleanField(default=False)),
                ('remark', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.CharField(blank=True, max_length=255, null=True)),
                ('type', models.CharField(blank=True, default='customer_purchase', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='point_transactions', to='api.user')),
                ('order', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='point_transactions', to='api.order')),
                ('user_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='point_transactions', to='api.usersubscription')),
            ],
            options={
                'db_table': 'api_point_transaction',
            },
        ),
        migrations.CreateModel(
            name='OrderProduct',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('sku', models.CharField(blank=True, default=None, max_length=32, null=True)),
                ('price', models.FloatField(blank=True, default=0, null=True)),
                ('image', models.CharField(blank=True, default=None, max_length=256, null=True)),
                ('qty', models.IntegerField(default=0, null=True)),
                ('type', models.CharField(blank=True, default='product', max_length=255)),
                ('subtotal', models.FloatField(blank=True, default=0, null=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='order_products', to='api.campaignproduct')),
                ('order', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='order_products', to='api.order')),
            ],
            options={
                'db_table': 'api_order_product',
            },
        ),
        migrations.AddField(
            model_name='order',
            name='buyer',
            field=models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='api.user'),
        ),
        migrations.AddField(
            model_name='order',
            name='campaign',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='api.campaign'),
        ),
        migrations.AddField(
            model_name='order',
            name='user_subscription',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='orders', to='api.usersubscription'),
        ),
        migrations.AddField(
            model_name='deal',
            name='payer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='api.user'),
        ),
        migrations.AddField(
            model_name='deal',
            name='user_subscription',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='deals', to='api.usersubscription'),
        ),
        migrations.CreateModel(
            name='CampaignQuizGameBundle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('remark', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('num_of_winner', models.IntegerField(blank=True, default=1, null=True)),
                ('repeatable', models.BooleanField(default=True)),
                ('is_follower', models.BooleanField(default=True)),
                ('winner_list', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quiz_game_bundle', to='api.campaign')),
                ('prize', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='quiz_game_bundle', to='api.campaignproduct')),
            ],
            options={
                'db_table': 'api_campaign_quiz_game_bundle',
            },
        ),
        migrations.CreateModel(
            name='CampaignQuizGame',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('question', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('answer', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('remark', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('start_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('quiz_game_bundle', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='quiz_games', to='api.campaignquizgamebundle')),
            ],
            options={
                'db_table': 'api_campaign_quiz_game',
            },
        ),
        migrations.AddField(
            model_name='campaignproduct',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_products', to='api.user'),
        ),
        migrations.AddField(
            model_name='campaignproduct',
            name='product',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaign_products', to='api.product'),
        ),
        migrations.CreateModel(
            name='CampaignLuckyDraw',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('num_of_winner', models.IntegerField(blank=True, default=1, null=True)),
                ('winner_list', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('repeatable', models.BooleanField(default=True)),
                ('animation', models.CharField(blank=True, max_length=255, null=True)),
                ('spin_time', models.IntegerField(default=5)),
                ('comment', models.CharField(blank=True, max_length=255, null=True)),
                ('title', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='lucky_draws', to='api.campaign')),
                ('campaign_product', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='product_lucky_draws', to='api.campaignproduct')),
                ('prize', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='prize_lucky_draws', to='api.campaignproduct')),
            ],
            options={
                'db_table': 'api_campaign_lucky_draw',
            },
        ),
        migrations.CreateModel(
            name='CampaignComment',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('platform', models.CharField(blank=True, max_length=255, null=True)),
                ('message', models.CharField(blank=True, max_length=255, null=True)),
                ('created_time', models.FloatField(blank=True, default=0, null=True)),
                ('customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('image', models.CharField(blank=True, max_length=255, null=True)),
                ('categories', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('main_categories', djongo.models.fields.JSONField(blank=True, default=list, null=True)),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='comments', to='api.campaign')),
            ],
            options={
                'db_table': 'api_campaign_comment',
            },
        ),
        migrations.AddField(
            model_name='campaign',
            name='created_by',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='api.user'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='dealer',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='subscriber_campaigns', to='api.usersubscription'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='facebook_page',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='api.facebookpage'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='instagram_profile',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='api.instagramprofile'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='tiktok_account',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='api.tiktokaccount'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='twitch_channel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='api.twitchchannel'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='user_subscription',
            field=models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='api.usersubscription'),
        ),
        migrations.AddField(
            model_name='campaign',
            name='youtube_channel',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='campaigns', to='api.youtubechannel'),
        ),
        migrations.CreateModel(
            name='AutoResponse',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('input_msg', models.TextField(blank=True, default=None, null=True)),
                ('output_msg', models.TextField(blank=True, default=None, null=True)),
                ('type', models.CharField(blank=True, max_length=255, null=True)),
                ('status', models.CharField(blank=True, max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('facebook_page', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auto_responses', to='api.facebookpage')),
                ('instagram_profile', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auto_responses', to='api.instagramprofile')),
                ('user_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='auto_responses', to='api.usersubscription')),
            ],
            options={
                'db_table': 'api_auto_response',
            },
        ),
        migrations.CreateModel(
            name='ProductCategory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta_logistic', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('user_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='product_categories', to='api.usersubscription')),
            ],
            options={
                'db_table': 'api_product_category',
                'unique_together': {('user_subscription', 'name')},
            },
        ),
        migrations.CreateModel(
            name='PreOrder',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_img', models.CharField(blank=True, max_length=255, null=True)),
                ('remark', models.TextField(blank=True, default=None, null=True)),
                ('subtotal', models.FloatField(blank=True, default=0, null=True)),
                ('total', models.FloatField(blank=True, default=0, null=True)),
                ('payment_method', models.CharField(blank=True, default='', max_length=32)),
                ('payment_remark', models.TextField(blank=True, default='')),
                ('paid_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('shipping_cost', models.FloatField(blank=True, default=0, null=True)),
                ('shipping_first_name', models.CharField(blank=True, default='', max_length=64)),
                ('shipping_last_name', models.CharField(blank=True, default='', max_length=64)),
                ('shipping_email', models.CharField(blank=True, default='', max_length=128)),
                ('shipping_phone', models.CharField(blank=True, default='', max_length=64)),
                ('shipping_postcode', models.CharField(blank=True, default='', max_length=10)),
                ('shipping_region', models.CharField(blank=True, default='', max_length=32)),
                ('shipping_location', models.CharField(blank=True, default='', max_length=32)),
                ('shipping_address_1', models.CharField(blank=True, default='', max_length=128)),
                ('pickup_address', models.CharField(blank=True, default='', max_length=128)),
                ('shipping_method', models.CharField(blank=True, default='', max_length=32)),
                ('shipping_remark', models.TextField(blank=True, default='')),
                ('shipping_date', models.DateField(blank=True, default=None, null=True)),
                ('shipping_option', models.CharField(blank=True, default='', max_length=32)),
                ('shipping_option_index', models.IntegerField(blank=True, default=None, null=True)),
                ('shipping_option_data', djongo.models.fields.JSONField(default=dict)),
                ('platform', models.CharField(blank=True, default=None, max_length=255)),
                ('platform_id', models.IntegerField(blank=True, default=None, null=True)),
                ('status', models.CharField(blank=True, default='review', max_length=255, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('products', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('checkout_details', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('history', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('lock_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('adjust_title', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('adjust_price', models.FloatField(blank=True, default=0, null=True)),
                ('free_delivery', models.BooleanField(default=False, null=True)),
                ('discount', models.FloatField(default=0)),
                ('applied_discount', djongo.models.fields.JSONField(default={})),
                ('tax', models.FloatField(default=0)),
                ('buyer', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pre_orders', to='api.user')),
                ('campaign', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='pre_orders', to='api.campaign')),
            ],
            options={
                'db_table': 'api_pre_order',
                'unique_together': {('platform', 'customer_id', 'campaign')},
            },
        ),
        migrations.CreateModel(
            name='DiscountCode',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=255, null=True)),
                ('description', models.TextField(blank=True, default=None, null=True)),
                ('code', models.CharField(blank=True, max_length=255, null=True)),
                ('period_enabled', models.BooleanField(default=True)),
                ('start_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('end_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('type', models.CharField(default='general', max_length=255)),
                ('discount_type', models.CharField(blank=True, max_length=255, null=True)),
                ('limitations', djongo.models.fields.JSONField(default=[])),
                ('applied_count', models.IntegerField(default=0)),
                ('used_count', models.IntegerField(default=0)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('buyer_usage', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('user_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='discount_codes', to='api.usersubscription')),
            ],
            options={
                'db_table': 'api_discount_code',
                'unique_together': {('user_subscription', 'code')},
            },
        ),
        migrations.CreateModel(
            name='Cart',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('customer_id', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_name', models.CharField(blank=True, max_length=255, null=True)),
                ('customer_img', models.CharField(blank=True, max_length=255, null=True)),
                ('platform', models.CharField(blank=True, default=None, max_length=255)),
                ('platform_id', models.IntegerField(blank=True, default=None, null=True)),
                ('products', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('lock_at', models.DateTimeField(blank=True, default=None, null=True)),
                ('adjust_title', models.CharField(blank=True, default=None, max_length=255, null=True)),
                ('adjust_price', models.FloatField(blank=True, default=0, null=True)),
                ('free_delivery', models.BooleanField(default=False, null=True)),
                ('discount', models.FloatField(default=0)),
                ('applied_discount', djongo.models.fields.JSONField(default={})),
                ('tax', models.FloatField(default=0)),
                ('meta', djongo.models.fields.JSONField(blank=True, default=dict, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(blank=True, default=None, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carts', to='api.user')),
                ('campaign', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carts', to='api.campaign')),
                ('user_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='carts', to='api.usersubscription')),
            ],
            options={
                'db_table': 'api_cart',
                'unique_together': {('platform', 'customer_id', 'campaign')},
            },
        ),
        migrations.CreateModel(
            name='BuyerWallet',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('points', models.IntegerField(default=0)),
                ('status', models.CharField(default='valid', max_length=255)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('buyer', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='wallets', to='api.user')),
                ('user_subscription', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='buyer_wallets', to='api.usersubscription')),
            ],
            options={
                'db_table': 'api_user_wallet',
                'unique_together': {('user_subscription', 'buyer')},
            },
        ),
    ]
